@model Share.Entities.Persona

@{
    ViewBag.Title = "Registrarse";

    List<SelectListItem> lstTiposDocumento = new List<SelectListItem>();
    lstTiposDocumento.Add(new SelectListItem() { Text = "Gestion", Value = Share.Enums.TipoDocumento.CI.ToString() });
    lstTiposDocumento.Add(new SelectListItem() { Text = "Gestion", Value = Share.Enums.TipoDocumento.OTROS.ToString() });

}

<h2>Registrarse</h2>
<h1>@ViewBag.algo</h1>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Persona</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group row">
        @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.apellido, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.apellido, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.apellido, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group row">
        @Html.LabelFor(model => model.tipo_documento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.tipo_documento, new { @class = "custom-select" })
            @Html.ValidationMessageFor(model => model.tipo_documento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.documento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.documento, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.documento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.correo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.correo, new { htmlAttributes = new { @class = "form-control", @Type = "email" } })
            @Html.ValidationMessageFor(model => model.correo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.contrasenia, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.contrasenia, new { htmlAttributes = new { @class = "form-control", @Type="password" } })
            @Html.ValidationMessageFor(model => model.contrasenia, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Continuar" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
